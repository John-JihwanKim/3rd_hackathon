#ifndef UARTFORINDUCTION_H
#define UARTFORINDUCTION_H

#define STX		0xE2
#define ETX		0xE5

typedef enum 
{
   eIND_TX_STX = 0,
   eIND_TX_UARTLENGTH,
   eIND_TX_UISTATUS_SYSTEM,
   eIND_TX_MAINSTATUS_SYSTEM,
   eIND_TX_INDUCTIONLEVEL,//(0 ~ 10)
   eIND_TX_ACLOADS,
   eIND_TX_HEIGHT_UPPERHEATER,//(1 ~ 5)
   eIND_TX_SETZERO_WEIGHT,
   eIND_TX_TEMP0,
   eIND_TX_TEMP1,
   eIND_TX_TEMP2,
   eIND_TX_TEMP3,
   eIND_TX_TEMP4,
   eIND_TX_CRC0,
   eIND_TX_CRC1,
   eIND_TX_ETX   
} eUART_TX_TO_INDUCTION;
#define TXUART_LENGTH_TO_INDUCTION eIND_TX_ETX

typedef enum 
{
   eIND_RX_STX = 0,
   eIND_RX_UARTLENGTH,
   eIND_RX_UISTATUS_SYSTEAM,
   eIND_RX_MAINSTATUS_SYSTEAM,
   eIND_RX_INDUCTIONLEVEL,
   eIND_RX_ACLOADS,
   eIND_RX_HEIGHT_UPPERHEATER,
   eIND_RX_STATUS_DOOR,
   eIND_RX_VALUE_WEIGHT0,
   eIND_RX_VALUE_WEIGHT1,
   eIND_RX_STATUS_NEEDPAUSE_ERROR,
   eIND_RX_STATUS_NO_NEEDPAUSE_ERROR,
   eIND_RX_MODEL_INFORMATION,
   eIND_RX_TEMP0,
   eIND_RX_TEMP1,
   eIND_RX_TEMP2,
   eIND_RX_TEMP3,
   eIND_RX_TEMP4,
   eIND_RX_CRC0,
   eIND_RX_CRC1,
   eIND_RX_ETX   
} eUART_RX_FROM_INDUCTION;
#define RXUART_LENGTH_FROM_INDUCTION eIND_RX_ETX

#define USART_BAUDRATE 19200
#define UBRR_VALUE (((F_CPU / (USART_BAUDRATE * 16UL))) - 1)

#define UART_PORT_RX_FOR_INDUCTION 16
#define UART_PORT_TX_FOR_INDUCTION 17

uint16_t CalcultationCRC(uint8_t *buf, uint8_t len);
void SendDataToThunderInductionFrequently(void);
void InitUARTForThunderInduction(void);
void InitUARTForDebugging(void);
void PrintInformationForDebugging(void);

#endif
